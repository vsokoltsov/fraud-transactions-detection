name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache uv & .venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Sync deps (base + dev + api)
        run: |
          if [ -f uv.lock ]; then
            uv sync --group dev --group api --frozen
          else
            uv sync --group dev --group api
          fi

      - name: Ruff (lint + fix suggestions)
        run: uv run ruff check api/ tests/ --output-format=github

      - name: Black (check)
        run: uv run black --check api/ tests/

      - name: Mypy
        run: uv run mypy api/ tests/

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    env:
      STORAGE: csv
      MODEL: xgboost
      VERSION: v2
      STORAGE_PATH: ./data/transactions.csv
      FEATURES_PATH: ./data/features_v2.yaml
      MODELS_PATH: ./models
      THRESHOLDS_PATH: ./data/models/thresholds.yaml

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache uv & .venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Sync deps (base + dev + api)
        run: |
          if [ -f uv.lock ]; then
            uv sync --group dev --group api --frozen
          else
            uv sync --group dev --group api
          fi

      - name: Run tests with coverage (xml + html)
        run: |
          rm -rf coverage_html .coverage coverage.xml
          uv run pytest -q \
            --cov=api \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml \
            --cov-report=html:coverage_html

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage_html

      - name: Upload coverage XML (for Codecov/Sonar etc.)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml